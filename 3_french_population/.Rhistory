by=list(flights_per_period$wd,
flights_per_period$period),
FUN=mean)
test
test %>% select(-c(wd, period))
test <- aggregate(flights_per_period,
by=list(flights_per_period$wd,
flights_per_period$period),
FUN=mean) %>%
select(-c(period, wd)) %>%
rename(Group.1=wd, Group.2=period)
test
test <- aggregate(flights_per_period,
by=list(flights_per_period$wd,
flights_per_period$period),
FUN=mean) %>%
select(-c(period, wd)) %>%
rename(wd=Group.1, period=Group.2)
test
ggplot(flights_per_period) + geom_boxplot(aes(x = period, y = count, fill=wd))
ggplot(flights_per_period) + geom_boxplot(aes(x = period, y = count))
spring_break_start <- "2013-03-17"
spring_break_end <- "2013-04-01"
summer_break_start <- "2013-06-26"
summer_break_end <- "2013-09-26"
fall_break_start <-"2013-10-29"
fall_break_end <- "2013-11-04"
endyear_christmas_break_start <- "2013-12-18"
endyear_christmas_break_end <- "2014-01-13"
startyear_christmas_break_end <- "2013-01-14"
flights_per_period <- flights %>%
mutate(hh = round(sched_dep_time / 100, 0) - 1) %>%
mutate(ymd = lubridate::ymd(sprintf("%04.0f-%02.0f-%02.0f", year, month, day),
locale = "en_US.utf8")) %>%
mutate(wd = lubridate::wday(ymd, label=TRUE, locale = "en_US.utf8"))%>%
mutate(period = case_when(
ymd >= spring_break_start & ymd <= spring_break_end ~ "spring",
ymd >= summer_break_start & ymd <= summer_break_end ~ "summer",
ymd >= fall_break_start & ymd <= fall_break_end ~ "fall",
ymd <= startyear_christmas_break_end ~ "christmas_1",
ymd >= endyear_christmas_break_start & ymd <= endyear_christmas_break_end ~ "christmas_2",
TRUE ~ "other"
)) %>%
group_by(period, wd) %>%
summarize(count=n())
lm(flights_per_period$count ~ flights_per_period$period)
flights_per_period
test <- aggregate(flights_per_period,
by=list(flights_per_period$wd,
flights_per_period$period),
FUN=mean) %>%
select(-c(period, wd)) %>%
rename(wd=Group.1, period=Group.2)
test
test <- aggregate(flights_per_period,
by=list(flights_per_period$wd),
FUN=mean) %>%
select(-c(period, wd)) %>%
rename(wd=Group.1, period=Group.2)
test
test2 <- aggregate(flights_per_period,
by=list(flights_per_period$wd),
FUN=mean) %>%
select(-c(period, wd)) %>%
rename(wd=Group.1, period=Group.2)
test2
test2 <- aggregate(flights_per_period,
by=list(flights_per_period$wd),
FUN=mean) %>%
select(-c(period, wd))
test2
test2 <- aggregate(flights_per_period,
by=list(flights_per_period$wd, flights_per_period$period),
FUN=mean) %>%
select(-c(period, wd))
test2
test2 <- aggregate(flights_per_period,
by=list(flights_per_period$period, flights_per_period$wd),
FUN=mean) %>%
select(-c(period, wd))
test2
test2 <- aggregate(flights_per_period,
by=list(flights_per_period$wd),
FUN=mean) %>%
select(-c(period, wd))
spring_break_start <- "2013-03-17"
spring_break_end <- "2013-04-01"
summer_break_start <- "2013-06-26"
summer_break_end <- "2013-09-26"
fall_break_start <-"2013-10-29"
fall_break_end <- "2013-11-04"
endyear_christmas_break_start <- "2013-12-18"
endyear_christmas_break_end <- "2014-01-13"
startyear_christmas_break_end <- "2013-01-14"
flights_per_period <- flights %>%
mutate(hh = round(sched_dep_time / 100, 0) - 1) %>%
mutate(ymd = lubridate::ymd(sprintf("%04.0f-%02.0f-%02.0f", year, month, day),
locale = "en_US.utf8")) %>%
mutate(wd = lubridate::wday(ymd, label=TRUE, locale = "en_US.utf8"))%>%
mutate(period = case_when(
ymd >= spring_break_start & ymd <= spring_break_end ~ "spring",
ymd >= summer_break_start & ymd <= summer_break_end ~ "summer",
ymd >= fall_break_start & ymd <= fall_break_end ~ "fall",
ymd <= startyear_christmas_break_end ~ "christmas_1",
ymd >= endyear_christmas_break_start & ymd <= endyear_christmas_break_end ~ "christmas_2",
TRUE ~ "other"
)) %>%
group_by(period, wd)
test2 <- aggregate(flights_per_period,
by=list(flights_per_period$wd),
FUN=mean) %>%
select(-c(period, wd))
test2
spring_break_start <- "2013-03-17"
spring_break_end <- "2013-04-01"
summer_break_start <- "2013-06-26"
summer_break_end <- "2013-09-26"
fall_break_start <-"2013-10-29"
fall_break_end <- "2013-11-04"
endyear_christmas_break_start <- "2013-12-18"
endyear_christmas_break_end <- "2014-01-13"
startyear_christmas_break_end <- "2013-01-14"
flights_per_period <- flights %>%
mutate(hh = round(sched_dep_time / 100, 0) - 1) %>%
mutate(ymd = lubridate::ymd(sprintf("%04.0f-%02.0f-%02.0f", year, month, day),
locale = "en_US.utf8")) %>%
mutate(wd = lubridate::wday(ymd, label=TRUE, locale = "en_US.utf8"))%>%
mutate(period = case_when(
ymd >= spring_break_start & ymd <= spring_break_end ~ "spring",
ymd >= summer_break_start & ymd <= summer_break_end ~ "summer",
ymd >= fall_break_start & ymd <= fall_break_end ~ "fall",
ymd <= startyear_christmas_break_end ~ "christmas_1",
ymd >= endyear_christmas_break_start & ymd <= endyear_christmas_break_end ~ "christmas_2",
TRUE ~ "other"
)) %>%
group_by(period, wd) $>$ summarize(count=n())
spring_break_start <- "2013-03-17"
spring_break_end <- "2013-04-01"
summer_break_start <- "2013-06-26"
summer_break_end <- "2013-09-26"
fall_break_start <-"2013-10-29"
fall_break_end <- "2013-11-04"
endyear_christmas_break_start <- "2013-12-18"
endyear_christmas_break_end <- "2014-01-13"
startyear_christmas_break_end <- "2013-01-14"
flights_per_period <- flights %>%
mutate(hh = round(sched_dep_time / 100, 0) - 1) %>%
mutate(ymd = lubridate::ymd(sprintf("%04.0f-%02.0f-%02.0f", year, month, day),
locale = "en_US.utf8")) %>%
mutate(wd = lubridate::wday(ymd, label=TRUE, locale = "en_US.utf8"))%>%
mutate(period = case_when(
ymd >= spring_break_start & ymd <= spring_break_end ~ "spring",
ymd >= summer_break_start & ymd <= summer_break_end ~ "summer",
ymd >= fall_break_start & ymd <= fall_break_end ~ "fall",
ymd <= startyear_christmas_break_end ~ "christmas_1",
ymd >= endyear_christmas_break_start & ymd <= endyear_christmas_break_end ~ "christmas_2",
TRUE ~ "other"
)) %>%
group_by(period, wd) %>% summarize(count=n())
test2 <- aggregate(flights_per_period,
by=list(flights_per_period$wd),
FUN=mean) %>%
select(-c(period, wd))
test2
spring_break_start <- "2013-03-17"
spring_break_end <- "2013-04-01"
summer_break_start <- "2013-06-26"
summer_break_end <- "2013-09-26"
fall_break_start <-"2013-10-29"
fall_break_end <- "2013-11-04"
endyear_christmas_break_start <- "2013-12-18"
endyear_christmas_break_end <- "2014-01-13"
startyear_christmas_break_end <- "2013-01-14"
flights_per_period <- flights %>%
mutate(hh = round(sched_dep_time / 100, 0) - 1) %>%
mutate(ymd = lubridate::ymd(sprintf("%04.0f-%02.0f-%02.0f", year, month, day),
locale = "en_US.utf8")) %>%
mutate(wd = lubridate::wday(ymd, label=TRUE, locale = "en_US.utf8"))%>%
mutate(period = case_when(
ymd >= spring_break_start & ymd <= spring_break_end ~ "spring",
ymd >= summer_break_start & ymd <= summer_break_end ~ "summer",
ymd >= fall_break_start & ymd <= fall_break_end ~ "fall",
ymd <= startyear_christmas_break_end ~ "christmas_1",
ymd >= endyear_christmas_break_start & ymd <= endyear_christmas_break_end ~ "christmas_2",
TRUE ~ "other"
)) %>%
group_by(period, wd) %>% summarize(count=n())
flights_per_period
spring_break_start <- "2013-03-17"
spring_break_end <- "2013-04-01"
summer_break_start <- "2013-06-26"
summer_break_end <- "2013-09-26"
fall_break_start <-"2013-10-29"
fall_break_end <- "2013-11-04"
endyear_christmas_break_start <- "2013-12-18"
endyear_christmas_break_end <- "2014-01-13"
startyear_christmas_break_end <- "2013-01-14"
flights_per_period <- flights %>%
mutate(hh = round(sched_dep_time / 100, 0) - 1) %>%
mutate(ymd = lubridate::ymd(sprintf("%04.0f-%02.0f-%02.0f", year, month, day),
locale = "en_US.utf8")) %>%
mutate(wd = lubridate::wday(ymd, label=TRUE, locale = "en_US.utf8"))%>%
mutate(period = case_when(
ymd >= spring_break_start & ymd <= spring_break_end ~ "spring",
ymd >= summer_break_start & ymd <= summer_break_end ~ "summer",
ymd >= fall_break_start & ymd <= fall_break_end ~ "fall",
ymd <= startyear_christmas_break_end ~ "christmas_1",
ymd >= endyear_christmas_break_start & ymd <= endyear_christmas_break_end ~ "christmas_2",
TRUE ~ "other"
)) %>%
group_by(period, wd) %>% aggregate(by=list(wd), FUN=mean())
spring_break_start <- "2013-03-17"
spring_break_end <- "2013-04-01"
summer_break_start <- "2013-06-26"
summer_break_end <- "2013-09-26"
fall_break_start <-"2013-10-29"
fall_break_end <- "2013-11-04"
endyear_christmas_break_start <- "2013-12-18"
endyear_christmas_break_end <- "2014-01-13"
startyear_christmas_break_end <- "2013-01-14"
flights_per_period <- flights %>%
mutate(hh = round(sched_dep_time / 100, 0) - 1) %>%
mutate(ymd = lubridate::ymd(sprintf("%04.0f-%02.0f-%02.0f", year, month, day),
locale = "en_US.utf8")) %>%
mutate(wd = lubridate::wday(ymd, label=TRUE, locale = "en_US.utf8"))%>%
mutate(period = case_when(
ymd >= spring_break_start & ymd <= spring_break_end ~ "spring",
ymd >= summer_break_start & ymd <= summer_break_end ~ "summer",
ymd >= fall_break_start & ymd <= fall_break_end ~ "fall",
ymd <= startyear_christmas_break_end ~ "christmas_1",
ymd >= endyear_christmas_break_start & ymd <= endyear_christmas_break_end ~ "christmas_2",
TRUE ~ "other"
)) %>%
group_by(period, wd) %>% aggregate(by=list(wd), FUN=mean)
spring_break_start <- "2013-03-17"
spring_break_end <- "2013-04-01"
summer_break_start <- "2013-06-26"
summer_break_end <- "2013-09-26"
fall_break_start <-"2013-10-29"
fall_break_end <- "2013-11-04"
endyear_christmas_break_start <- "2013-12-18"
endyear_christmas_break_end <- "2014-01-13"
startyear_christmas_break_end <- "2013-01-14"
flights_per_period <- flights %>%
mutate(hh = round(sched_dep_time / 100, 0) - 1) %>%
mutate(ymd = lubridate::ymd(sprintf("%04.0f-%02.0f-%02.0f", year, month, day),
locale = "en_US.utf8")) %>%
mutate(wd = lubridate::wday(ymd, label=TRUE, locale = "en_US.utf8"))%>%
mutate(period = case_when(
ymd >= spring_break_start & ymd <= spring_break_end ~ "spring",
ymd >= summer_break_start & ymd <= summer_break_end ~ "summer",
ymd >= fall_break_start & ymd <= fall_break_end ~ "fall",
ymd <= startyear_christmas_break_end ~ "christmas_1",
ymd >= endyear_christmas_break_start & ymd <= endyear_christmas_break_end ~ "christmas_2",
TRUE ~ "other"
)) %>%
group_by(period, wd) %>% aggregate(by=list(flights$wd), FUN=mean)
spring_break_start <- "2013-03-17"
spring_break_end <- "2013-04-01"
summer_break_start <- "2013-06-26"
summer_break_end <- "2013-09-26"
fall_break_start <-"2013-10-29"
fall_break_end <- "2013-11-04"
endyear_christmas_break_start <- "2013-12-18"
endyear_christmas_break_end <- "2014-01-13"
startyear_christmas_break_end <- "2013-01-14"
flights_per_period <- flights %>%
mutate(hh = round(sched_dep_time / 100, 0) - 1) %>%
mutate(ymd = lubridate::ymd(sprintf("%04.0f-%02.0f-%02.0f", year, month, day),
locale = "en_US.utf8")) %>%
mutate(wd = lubridate::wday(ymd, label=TRUE, locale = "en_US.utf8"))%>%
mutate(period = case_when(
ymd >= spring_break_start & ymd <= spring_break_end ~ "spring",
ymd >= summer_break_start & ymd <= summer_break_end ~ "summer",
ymd >= fall_break_start & ymd <= fall_break_end ~ "fall",
ymd <= startyear_christmas_break_end ~ "christmas_1",
ymd >= endyear_christmas_break_start & ymd <= endyear_christmas_break_end ~ "christmas_2",
TRUE ~ "other"
)) %>%
group_by(period, wd)
flights_per_period %>% aggregate(by=list(flights$wd), FUN=mean)
aggregate(flights_per_period, by=list(flights_per_period$wd), FUN=mean)
aggregate(flights_per_period, by=list(flights_per_period$wd), FUN=n)
aggregate(flights_per_period, by=list(flights_per_period$wd), FUN=count)
aggregate(flights_per_period, by=list(flights_per_period$wd))
aggregate(flights_per_period, by=list(flights_per_period$wd),fun=mean)
aggregate(flights_per_period, by=list(flights_per_period$wd),FUN = mean)
aggregate(flights_per_period, by=list(flights_per_period$wd),FUN = count)
aggregate(flights_per_period, by=list(flights_per_period$wd),FUN = n)
spring_break_start <- "2013-03-17"
spring_break_end <- "2013-04-01"
summer_break_start <- "2013-06-26"
summer_break_end <- "2013-09-26"
fall_break_start <-"2013-10-29"
fall_break_end <- "2013-11-04"
endyear_christmas_break_start <- "2013-12-18"
endyear_christmas_break_end <- "2014-01-13"
startyear_christmas_break_end <- "2013-01-14"
flights_per_period <- flights %>%
mutate(hh = round(sched_dep_time / 100, 0) - 1) %>%
mutate(ymd = lubridate::ymd(sprintf("%04.0f-%02.0f-%02.0f", year, month, day),
locale = "en_US.utf8")) %>%
mutate(wd = lubridate::wday(ymd, label=TRUE, locale = "en_US.utf8"))%>%
mutate(period = case_when(
ymd >= spring_break_start & ymd <= spring_break_end ~ "spring",
ymd >= summer_break_start & ymd <= summer_break_end ~ "summer",
ymd >= fall_break_start & ymd <= fall_break_end ~ "fall",
ymd <= startyear_christmas_break_end ~ "christmas_1",
ymd >= endyear_christmas_break_start & ymd <= endyear_christmas_break_end ~ "christmas_2",
TRUE ~ "other"
)) %>%
group_by(period, ymd) %>%
summarize(count=n())
flights_per_period
flights_per_period <- aggregate(flights_per_period,
by=list(flights_per_period$ymd,
flights_per_period$period),
FUN=mean) %>%
select(-c(period, ymd)) %>%
rename(ymd=Group.1, period=Group.2)
flights_per_period
ggplot(flights_per_period) + geom_boxplot(aes(x = period, y = count, fill=ymd))
period
ggplot(flights_per_period) + geom_boxplot(aes(x = period, y = count, fill=period))
spring_break_start <- "2013-03-17"
spring_break_end <- "2013-04-01"
summer_break_start <- "2013-06-26"
summer_break_end <- "2013-09-26"
fall_break_start <-"2013-10-29"
fall_break_end <- "2013-11-04"
endyear_christmas_break_start <- "2013-12-18"
endyear_christmas_break_end <- "2014-01-13"
startyear_christmas_break_end <- "2013-01-14"
flights_per_period <- flights %>%
mutate(hh = round(sched_dep_time / 100, 0) - 1) %>%
mutate(ymd = lubridate::ymd(sprintf("%04.0f-%02.0f-%02.0f", year, month, day),
locale = "en_US.utf8")) %>%
mutate(wd = lubridate::wday(ymd, label=TRUE, locale = "en_US.utf8"))%>%
mutate(period = case_when(
ymd >= spring_break_start & ymd <= spring_break_end ~ "Spring\nBreak",
ymd >= summer_break_start & ymd <= summer_break_end ~ "Summer\nBreak",
ymd >= fall_break_start & ymd <= fall_break_end ~ "Fall\nBreak",
ymd <= startyear_christmas_break_end ~ "Early\nJanuary 2013",
ymd >= endyear_christmas_break_start & ymd <= endyear_christmas_break_end ~ "Christmas\nBreak",
TRUE ~ "School\nSemesters"
)) %>%
group_by(period, ymd) %>%
summarize(count=n())
flights_per_period <- aggregate(flights_per_period,
by=list(flights_per_period$ymd,
flights_per_period$period),
FUN=mean) %>%
select(-c(period, ymd)) %>%
rename(ymd=Group.1, period=Group.2)
flights_per_period
a
spring_break_start <- "2013-03-17"
spring_break_end <- "2013-04-01"
summer_break_start <- "2013-06-26"
summer_break_end <- "2013-09-26"
fall_break_start <-"2013-10-29"
fall_break_end <- "2013-11-04"
endyear_christmas_break_start <- "2013-12-18"
endyear_christmas_break_end <- "2014-01-13"
startyear_christmas_break_end <- "2013-01-14"
flights_per_period <- flights %>%
mutate(hh = round(sched_dep_time / 100, 0) - 1) %>%
mutate(ymd = lubridate::ymd(sprintf("%04.0f-%02.0f-%02.0f", year, month, day),
locale = "en_US.utf8")) %>%
mutate(wd = lubridate::wday(ymd, label=TRUE, locale = "en_US.utf8"))%>%
mutate(period = case_when(
ymd >= spring_break_start & ymd <= spring_break_end ~ "Spring\nBreak",
ymd >= summer_break_start & ymd <= summer_break_end ~ "Summer\nBreak",
ymd >= fall_break_start & ymd <= fall_break_end ~ "Fall\nBreak",
ymd <= startyear_christmas_break_end ~ "Early\nJanuary 2013",
ymd >= endyear_christmas_break_start & ymd <= endyear_christmas_break_end ~ "Christmas\nBreak",
TRUE ~ "School\nSemesters"
)) %>%
group_by(period, ymd, wd) %>%
summarize(count=n())
flights_per_period
flights_per_period <- aggregate(flights_per_period,
by=list(flights_per_period$wd,
flights_per_period$period),
FUN=mean)
flights_per_period
ggplot(flights_per_period) + geom_boxplot(aes(x = wd, y = count, fill=period)) +
labs(x = "Distinguishable 2013 Periods", y="Average daily flights") +
ggtitle("Spread of average daily flights per school periods in 2013 in NYC")
ggplot(flights_per_period) + geom_boxplot(aes(x = wd, y = count, fill=wd)) +
labs(x = "Distinguishable 2013 Periods", y="Average daily flights") +
ggtitle("Spread of average daily flights per school periods in 2013 in NYC")
ggplot(flights_per_period) + geom_boxplot(aes(x = wd, y = count))
flights_per_period
ggplot(flights_per_period) + geom_boxplot(aes(x = Group.1, y = count))
ggplot(flights_per_period) + geom_boxplot(aes(x = c(Group.1, Group.2), y = count))
ggplot(flights_per_period, aes(fill=period,
y=count,
x=wd)) +
geom_bar(position="dodge", stat="identity")
ggplot(flights_per_period, aes(fill=Group.2,
y=count,
x=Group.1)) +
geom_bar(position="dodge", stat="identity")
ggplot(flights_per_period, aes(fill=Group.2,
y=count,
x=Group.1)) +
geom_bar(position="dodge", stat="identity") +
scale_fill_brewer(name="Cut\nquality", palette = "Spectral")
shiny::runApp('Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny3')
runApp('Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny2')
runApp('Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny')
runApp('Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/homework_l_4/reactive_version.R')
runApp('~/Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny')
runApp('Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny2')
runApp('Programming/R_markdowns_shiny-apps/3_french_population/3_french_population.R')
qairports = read.csv("population.txt", header=T, encoding="UTF-8", sep=" ")
setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
library(rstudioapi)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
filename = "3_french_population.R"
filepath = file.choose()  # browse and select your_file.R in the window
dir = substr(filepath, 1, nchar(filepath)-nchar(filename))
setwd(dir)
download.file(https://unice-my.sharepoint.com/:t:/g/personal/silvia_bottini_unice_fr/EXEBZ3Bur0VDuItQHMIOzTwBqIV1AFeO6pzQwNhJXVY-QA?e=rLvjSw)
download.file("https://unice-my.sharepoint.com/:t:/g/personal/silvia_bottini_unice_fr/EXEBZ3Bur0VDuItQHMIOzTwBqIV1AFeO6pzQwNhJXVY-QA?e=rLvjSw")
download.file("https://unice-my.sharepoint.com/:t:/g/personal/silvia_bottini_unice_fr/EXEBZ3Bur0VDuItQHMIOzTwBqIV1AFeO6pzQwNhJXVY-QA?e=rLvjSw", destfile"./population.txt")
download.file("https://unice-my.sharepoint.com/:t:/g/personal/silvia_bottini_unice_fr/EXEBZ3Bur0VDuItQHMIOzTwBqIV1AFeO6pzQwNhJXVY-QA?e=rLvjSw", destfile="./population.txt")
#read data from txt
destfile="./population.txt"
fileURL <-"https://unice-my.sharepoint.com/:t:/g/personal/silvia_bottini_unice_fr/EXEBZ3Bur0VDuItQHMIOzTwBqIV1AFeO6pzQwNhJXVY-QA?e=rLvjSw"
if (!file.exists(destfile)) {
setInternet2(TRUE)
download.file(fileURL ,destfile,method="auto")
}
destfile="./population.txt"
fileURL <-"https://unice-my.sharepoint.com/:t:/g/personal/silvia_bottini_unice_fr/EXEBZ3Bur0VDuItQHMIOzTwBqIV1AFeO6pzQwNhJXVY-QA?e=rLvjSw"
if (!file.exists(destfile)) {
download.file(fileURL ,destfile,method="auto")
}
qairports = read.csv("./population.txt", header=T, encoding="UTF-8", sep=" ")
qairports = read.csv("./population.txt", header=T, stringsAsFactor=F, encoding="UTF-8", sep=" ")
read.csv("./population.txt")
clear
runApp('Programming/R_markdowns_shiny-apps/3_french_population/3_french_population.R')
runApp('Programming/R_markdowns_shiny-apps/3_french_population/3_french_population.R')
runApp('Programming/R_markdowns_shiny-apps/3_french_population/3_french_population.R')
runApp('Programming/R_markdowns_shiny-apps/3_french_population/3_french_population.R')
runApp('Programming/R_markdowns_shiny-apps/3_french_population/3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('Programming/R_markdowns_shiny-apps/3_french_population/3_french_population.R')
runApp('~/Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny3')
getwd()
read.csv("population.txt", header = TRUE)
setwd("~/Programming/R_markdowns_shiny-apps/3_french_population")
read.csv("population.txt", header = TRUE)
read.csv("population.txt", header = TRUE, sep=" ")
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('~/Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny3')
runApp('~/Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny2')
runApp('~/Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny')
runApp('3_french_population.R')
read.csv("population.txt", header = TRUE, sep=" ")
d <- read.csv("population.txt", header = TRUE, sep=" ")
d$year %>% unique()
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('~/Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny3')
runApp('~/Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny2')
runApp('~/Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
as.Date("2000", "%Y")
as.Date("2000", "%YYYY")
as.Date("2000")
as.Date(2000)
runApp('3_french_population.R')
runApp('~/Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny3')
runApp('~/Programming/UCA_MSc-DS1/1_R_processing/lecture_4/exercises/shiny/test_shiny')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
runApp('3_french_population.R')
